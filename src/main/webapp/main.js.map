{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/logon/logon.component.css","webpack:///./src/app/logon/logon.component.html","webpack:///./src/app/logon/logon.component.ts","webpack:///./src/app/profile-details/profile-details.component.css","webpack:///./src/app/profile-details/profile-details.component.html","webpack:///./src/app/profile-details/profile-details.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/quates/quates.component.css","webpack:///./src/app/quates/quates.component.html","webpack:///./src/app/quates/quates.component.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/service/auth-http-interceptor.service.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LogonComponent } from './logon/logon.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatAutocompleteModule,\n  MatFormFieldModule,\n  MatGridListModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSidenavModule\n} from '@angular/material';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ProfileComponent } from './profile/profile.component';\nimport { RoutingModule } from './routing/routing.module';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatListModule } from '@angular/material';\nimport { MatCardModule } from '@angular/material/';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport { QuatesComponent } from './quates/quates.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { ProfileDetailsComponent } from './profile-details/profile-details.component';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { FusionChartsModule } from 'angular-fusioncharts';\n\n// Load FusionCharts\nimport * as FusionCharts from 'fusioncharts';\n// Load Charts module\nimport * as Charts from 'fusioncharts/fusioncharts.charts';\n// Load themes\nimport * as FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n\nimport * as TimeSeries from 'fusioncharts/fusioncharts.timeseries';\nimport {AuthHttpInterceptor} from './service/auth-http-interceptor.service';\n\n\n// Add dependencies to FusionChartsModule\nFusionChartsModule.fcRoot(\n  FusionCharts,\n  Charts,\n  FusionTheme,\n  TimeSeries\n);\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogonComponent,\n    ProfileComponent,\n    QuatesComponent,\n    ProfileDetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSidenavModule,\n    RoutingModule,\n    MatListModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatGridListModule,\n    MatToolbarModule,\n    HttpClientModule,\n    MatAutocompleteModule,\n    FusionChartsModule,\n    MatFormFieldModule\n  ],\n  providers: [{provide: HTTP_INTERCEPTORS, useClass: AuthHttpInterceptor, multi : true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"checkoutForm\\\" (ngSubmit)=\\\"testSubmit()\\\">\\n<p>\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>User name</mat-label>\\n    <input matInput placeholder=\\\"User name\\\" formControlName=\\\"login\\\">\\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\n  </mat-form-field>\\n</p>\\n<p>\\n  <mat-form-field appearance=\\\"outline\\\">\\n    <mat-label>Password</mat-label>\\n    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\n  </mat-form-field>\\n</p>\\n  <button mat-button color=\\\"accent\\\" class=\\\"button\\\" type=\\\"submit\\\">Login</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthenticationService} from '../service/authentication.service';\n\n@Component({\n  selector: 'app-logon',\n  templateUrl: './logon.component.html',\n  styleUrls: ['./logon.component.css']\n})\nexport class LogonComponent implements OnInit {\n  checkoutForm;\n  constructor( private formBuilder: FormBuilder, private route: Router, private authService: AuthenticationService) {\n    this.checkoutForm = this.formBuilder.group({\n      login: '',\n      password: ''\n    });\n  }\n  testSubmit() {\n    const val = this.checkoutForm.value;\n    this.authService.authenticate(val.login, val.password).subscribe(\n      () => this.route.navigate(['/profile/' + val.login])\n    );\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-title>Hello, {{name}}</mat-card-title>\\n  <mat-card-subtitle>Profile details</mat-card-subtitle>\\n  <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"save()\\\">\\n    <mat-form-field appearance=\\\"standard\\\">\\n      <mat-label>First Name</mat-label>\\n      <input matInput placeholder=\\\"User name\\\" formControlName=\\\"firstName\\\">\\n    </mat-form-field>\\n    <p>\\n      <mat-form-field appearance=\\\"standard\\\">\\n        <mat-label>Second Name</mat-label>\\n        <input matInput placeholder=\\\"Second Name\\\" formControlName=\\\"secondName\\\">\\n      </mat-form-field>\\n    <p>\\n      <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Birthday\\\" formControlName=\\\"birthday\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n      </mat-form-field>\\n    <p>\\n      <mat-form-field appearance=\\\"standard\\\">\\n        <mat-label>Country of origin</mat-label>\\n        <mat-select matInput formControlName=\\\"country\\\">\\n          <mat-option *ngFor=\\\"let option of countryOption\\\" [value]=\\\"option\\\">\\n            {{ option }}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    <p>\\n      <mat-form-field>\\n        <textarea matInput placeholder=\\\"Short profile description\\\" formControlName=\\\"description\\\"></textarea>\\n      </mat-form-field>\\n    <p>\\n      <button mat-button color=\\\"accent\\\" class=\\\"button\\\" type=\\\"submit\\\">Submit profile</button>\\n  </form>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile-details',\n  templateUrl: './profile-details.component.html',\n  styleUrls: ['./profile-details.component.css']\n})\nexport class ProfileDetailsComponent implements OnInit {\n  name = 'Andrey';\n  profileForm;\n  countryOption = ['USA' , 'Ukraine' , 'Russia']\n\n\n  constructor(private formBuilder: FormBuilder, private httpClient: HttpClient, private router: Router, private route: ActivatedRoute) {\n    this.profileForm = formBuilder.group({\n      id: ' ',\n      firstName: ' ',\n      secondName: ' ',\n      birthday: ' ',\n      country: ' ',\n      description: ' '\n    });\n  }\n\n  save() {\n    this.httpClient.put('http://localhost:8080/api/profile', this.profileForm.value).subscribe(response => {\n      console.log('Profile sumbitted succesfuly');\n    });\n  }\n\n  ngOnInit() {\n    this.route.parent.params.subscribe(params => {\n      this.httpClient.get('http://localhost:8080/api/' + params.id).subscribe(userDetails => {\n        console.log(userDetails['id']);\n        const t = new Date(userDetails['birthday']);\n        const date = new Date(t.getFullYear(), t.getMonth(), t.getDate());\n        this.profileForm.patchValue({id: userDetails['id'], firstName: userDetails['firstName'],\n          secondName: userDetails['secondName'],\n          birthday:  date,\n          country: userDetails['country'],\n          description: userDetails['description']\n        });\n      });\n    });\n  }\n\n}\n","module.exports = \".example-container {\\n  postextition: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background: black;\\n}\\n\\nmat-sidenav-container {\\n  text-align:center;\\n  height:100%\\n}\\n\\n.mat-list-item {\\n  border:5px;\\n  font-size: 22px;\\n}\\n\\nmat-grid-tile {\\n  background-color: gray;\\n}\\n\\n/*.example-card {*/\\n\\n/*  max-width: 30%;*/\\n\\n/*}*/\\n\\n/*mat-sidenav {*/\\n\\n/*  background-color: rgba(191, 179, 34, 0.6);*/\\n\\n/*}*/\\n\\n\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <button mat-icon-button>\\n      <mat-icon (click)=\\\"sidenav.toggle()\\\">menu</mat-icon>\\n    </button>\\n    <span>Simple Trader</span>\\n    <button  mat-button color=\\\"accent\\\" class=\\\"button\\\"  (click)=\\\"logout()\\\">\\n   <span>Logout</span>\\n    </button>\\n  </mat-toolbar-row>\\n  <mat-toolbar-row>\\n    <span style=\\\"font-size:14px\\\">Simple Trading for everyone!</span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-sidenav-container>\\n  <mat-sidenav #sidenav>\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\\"['/profile/',username]\\\">\\n        <mat-icon>account_box</mat-icon>\\n        <span class=\\\"nav-caption\\\">Profile</span>\\n      </a>\\n      <mat-divider></mat-divider>\\n      <a mat-list-item [routerLink]=\\\"['/quotes/',username]\\\">\\n        <mat-icon>list_alt</mat-icon>\\n        <span class=\\\"nav-caption\\\">WatchList</span>\\n      </a>\\n      <mat-divider></mat-divider>\\n      <a mat-list-item routerLink=\\\"#\\\">\\n        <mat-icon>account_balance</mat-icon>\\n        <span class=\\\"nav-caption\\\">Positions</span>\\n      </a>\\n      <mat-divider></mat-divider>\\n      <a mat-list-item routerLink=\\\"#\\\">\\n        <mat-icon>today</mat-icon>\\n        <span class=\\\"nav-caption\\\">News</span>\\n      </a>\\n      <mat-divider></mat-divider>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n\\n<router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Form, FormBuilder} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n\n})\nexport class ProfileComponent implements OnInit {\n  name = 'Andrey';\n  profileForm;\n  countryOption = ['USA' , 'Ukraine' , 'Russia']\n  userDetails;\n  username;\n  constructor(private router: Router, private formBuilder: FormBuilder, private route: ActivatedRoute, private httpClient: HttpClient) {\n  }\n\n  onActivate(componentRefence) {\n\n    const token =  sessionStorage.getItem('token');\n    const headers = new HttpHeaders({'Authorization' : token})\n\n  }\n\n  logout() {\n    sessionStorage.removeItem('token');\n    this.router.navigate(['/']);\n  }\n\n  ngOnInit() {\n    this.username = this.route.snapshot.params['id'];\n    console.log(this.username)\n  }\n\n}\n","module.exports = \".flex-container {\\n  display:flex;\\n  flex-wrap:wrap;\\n\\n}\\n.flex-container > fusioncharts {\\n  margin:20px;\\n  padding:10px;\\n}\\n\"","module.exports = \"<h3>Choose a symbol to watch:</h3>\\n  <mat-form-field>\\n    <input type=\\\"text\\\" placeholder=\\\"Please choose symbol\\\" matInput [formControl]=\\\"myControl\\\" [matAutocomplete]=\\\"auto\\\">\\n  <mat-autocomplete   #auto=\\\"matAutocomplete\\\">\\n    <mat-option  *ngFor=\\\"let symbol of filteredOption | async\\\" [value] = \\\"symbol\\\">\\n      {{symbol}}\\n    </mat-option>\\n  </mat-autocomplete>\\n  </mat-form-field>\\n<button (click)=\\\"ok()\\\"  mat-button color=\\\"primary\\\" class=\\\"button\\\" type=\\\"submit\\\">Add chart</button>\\n<div class=\\\"flex-container\\\">\\n  <fusioncharts *ngFor=\\\"let dataSource of dataArray\\\"\\n    [type]=\\\"type\\\"\\n    [width]=\\\"width\\\"\\n    [height]=\\\"height\\\"\\n    [dataSource]=\\\"dataSource\\\"></fusioncharts>\\n</div>\\n\\n\\n\\n\\n\"","import {Component, OnInit, NgZone} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {FormControl} from '@angular/forms';\nimport {map, startWith} from 'rxjs/operators';\nimport * as FusionCharts from 'fusioncharts';\nimport {Subscription, timer, pipe} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport {ActivatedRoute} from '@angular/router';\n// import {RSocketClient, JsonSerializer, IdentitySerializer} from 'rsocket-core';\n// import RSocketWebSocketClient from 'rsocket-websocket-client';\n// tslint:disable-next-line:import-blacklist\n\n\n@Component({\n  selector: 'app-quates',\n  templateUrl: './quates.component.html',\n  styleUrls: ['./quates.component.css']\n})\nexport class QuatesComponent implements OnInit {\n  restApi = 'http://localhost:8080/stock';\n  symbols = [{symbol: 'AAA'}, {symbol: 'BBB'}];\n  myControl = new FormControl();\n  dataArray = [];\n  type: string;\n  width: string;\n  height: string;\n  username;\n\n  constructor(private httpClient: HttpClient, private route: ActivatedRoute) {\n    this.type = 'column2d';\n    this.width = '25%';\n    this.height = '400';\n  }\n\n  filteredOption = this.myControl.valueChanges\n    .pipe(startWith(),\n      map(value => this._filter(value)));\n\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n    return this.symbols.map(sym => sym.symbol).filter(option => option.toLowerCase().includes(filterValue));\n  }\n\n  updateChart(dataSource) {\n    const source = new EventSource('http://localhost:8080/stocks');\n    // @ts-ignore\n    source.addEventListener('message', (aString) => console.log(aString.data), false);\n    // dataSource.data.push({value: 300});\n    return 'ok';\n  }\n\n  ok() {\n    const dataSource = {\n      data: null,\n      caption: {\n        text: this.myControl.value\n      },\n      yAxis: {\n        plot: {\n          value: 'Open',\n          type: 'candlestick'\n        },\n        title: 'Value'\n      }\n    };\n    this.dataArray.push(dataSource);\n    this.fetchData(dataSource);\n    this.updateChart(dataSource);\n    // this.subscription = timer(0, 10000).pipe(\n    //   switchMap(() => this.updateChart(dataSource))\n    // ).subscribe(result => this.statusText = result);\n    // console.log(this.myControl);\n  }\n\n  fetchData(dataSource) {\n    const jsonify = res => res.json();\n    const dataFetch = fetch(\n      'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/candlestick-chart-data.json'\n    ).then(jsonify);\n    const schemaFetch = fetch(\n      'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/candlestick-chart-schema.json'\n    ).then(jsonify);\n\n    dataSource.data = [\n      {value: 500},\n      {value: 600},\n      {value: 700}\n    ];\n\n    Promise.all([dataFetch, schemaFetch]).then(res => {\n      const data = res[0];\n      const schema = res[1];\n      // First we are creating a DataStore\n      const fusionDataStore = new FusionCharts.DataStore();\n      // After that we are creating a DataTable by passing our data and schema as arguments\n      const fusionTable = fusionDataStore.createDataTable(data, schema);\n      // Afet that we simply mutated our timeseries datasource by attaching the above\n      // DataTable into its data property.\n      // dataSource.data = fusionTable;\n    });\n  }\n\n  ngOnInit() {\n    this.httpClient.get(this.restApi)\n      .subscribe((data : any[]) => {\n        console.log(data);\n        this.symbols = data;\n      });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {LogonComponent} from '../logon/logon.component';\nimport {ProfileComponent} from '../profile/profile.component';\nimport {QuatesComponent} from '../quates/quates.component';\nimport {ProfileDetailsComponent} from '../profile-details/profile-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot([{path: '', component: LogonComponent},\n        {\n          path: 'profile/:id', component: ProfileComponent,\n          children: [{path: '', component: ProfileDetailsComponent}]\n        },\n        {\n          path: 'quotes/:id', component: ProfileComponent,\n          children: [{path: '', component: QuatesComponent}]\n        }\n      ],\n    ),\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class RoutingModule {\n}\n","import { Injectable } from '@angular/core';\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\n\n@Injectable()\nexport class AuthHttpInterceptor implements HttpInterceptor  {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    console.log(req)\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      const cloned = req.clone({\n                headers: req.headers.set('authorization',\n                    'Bearer ' + sessionStorage.getItem('token'))\n     });\n      return next.handle(cloned)\n    }\n    return next.handle(req);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  authenticate(username, password) {\n    return this.httpClient.post<any>('http://localhost:8080/auth/signin',{username, password}).pipe(\n      map(userData => {\n        console.log(userData)\n        sessionStorage.setItem('username', username);\n        sessionStorage.setItem('token',userData.token);\n        return userData;\n      })\n    );\n  }\n\n\n  isUserLoggedIn() {\n    const user = sessionStorage.getItem('username')\n    return !(user === null);\n  }\n  logOut() {\n    sessionStorage.removeItem('username')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}